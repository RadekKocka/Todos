@page "/"
@using Todos.App.Models;.
@using Todos.App.Extensions;

<PageTitle>Todos</PageTitle>

<h3>Todos</h3>

@if (todoFactory.GetTodos() is not null)
{
    <div class="input-group w-50 mb-3">
        <input type="text" class="form-control" placeholder="Enter a to-do" @bind="@description" />
        <button class="btn btn-outline-success" @onclick="AddTodo">Add</button>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger alert-dismissible w-50">
            <strong>Error! </strong>@errorMessage
            <button type="button" class="btn btn-close" @onclick="HideError"></button>
        </div>
    }

    <ul class="list-group w-50 mb-3">
        @foreach (var todo in todoFactory.GetTodos())
        {
            <li class="list-group-item d-flex align-items-center justify-content-between">
                <div>
                    <input id="@todo.Id" type="checkbox" class="form-check-input" checked="@todo.Completed" @onchange="@(e => Update(e.Value.ToBool(), todo))" />
                    <label class="form-check-label @(todo.Completed ? "completed" : "")" for="@todo.Id">@todo.Description</label>
                </div>
                <input type="button" value="Delete" class="btn btn-outline-danger btn-sm" @onclick="() => DeleteTodo(todo)" />
            </li>
        }
    </ul>
}

@code {
    string description = string.Empty;
    string errorMessage = string.Empty;

    TodoFactory todoFactory = new();

    void HideError() => errorMessage = string.Empty;

    void Update(bool completed, Todo todo)
    {
        HideError();
        if (!todoFactory.Update(completed, todo))
        {
            errorMessage = "Unable to update Todo";
        }
    }

    void DeleteTodo(Todo todo)
    {
        HideError();
        todoFactory.DeleteTodo(todo);
    }

    void AddTodo()
    {
        HideError();
        try
        {
            todoFactory.AddTodo(description);
            description = string.Empty;
        }
        catch (ArgumentNullException ex)
        {
            errorMessage = ex.Message;
        }
        catch (ArgumentException ex)
        {
            errorMessage = ex.Message;
        }
        catch
        {
            errorMessage = "Something went wrong";
        }
    }

}


